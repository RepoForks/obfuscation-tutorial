apply plugin: 'com.android.application'

android {
    compileSdkVersion 23
    buildToolsVersion "23.0.3"

    defaultConfig {
        applicationId "com.worldline.techforum.obfuscation"
        minSdkVersion 16
        targetSdkVersion 23
        versionCode 1
        versionName "1.0"

        // Android default proguard file
        //
        // To work, the repackaging feature requires that proguard optimization feature is enabled.
        // However, activating optimization might break the build (this was the case here).
        //
        // We came with the following solution : copy and paste the 'tools/proguard/proguard-android-optimize.txt'
        // file from the android SDK, and disable the feature that breaks the build (in our case, the '-allowaccessmodification'
        // option, that gson didn't support well)
        //
        // /!\ Warning /!\
        //
        // Using 'getDefaultProguardFile' will automatically update the default proguard configuration with the updates
        // of the SDK. This won't be the case now, so Don't forget to update this file when it is changed by the android team.
        //
        proguardFiles 'proguard/proguard-android-optimize-workaround.pro'

        // Libraries proguard files
        //
        // Firstly, I have to find all the libraries that are used by my application, even the transitive libraries
        // I can find them by typing the following command: './gradlew :app:dependencies'. I can filter the output,
        // by searching only the build variant that I'm interested in : 'releaseCompile'
        //
        // Secondly, I have to import the proguard configuration of each of those libraries, if any.
        // I can find them by going to the website of each concerned project, or by creating them myself,
        // if I'm experienced enough with proguard.
        // There is also a project that references the most common android libraries in one github repository :
        // https://github.com/krschultz/android-proguard-snippets
        //
        // Then I add each library one by one in my build.gradle file, for better maintainability and readability.

        proguardFiles 'proguard/proguard-butterknife-7.pro'
        proguardFiles 'proguard/proguard-support-v7-appcompat.pro'

        // My Application proguard file
        proguardFiles 'proguard/proguard-app.pro'

    }
    buildTypes {
        release {
            minifyEnabled true

            // apply the debug signing config for release, to make testing easier for us
            signingConfig signingConfigs.debug
        }
    }

    packagingOptions {
        exclude 'META-INF/services/javax.annotation.processing.Processor'
    }
}

dependencies {

    debugCompile   project(path: ':library', configuration: 'debug')
    releaseCompile project(path: ':library', configuration: 'release')

    compile 'com.android.support:appcompat-v7:23.3.0'
    compile 'com.jakewharton:butterknife:7.0.1'
    compile 'com.jakewharton.timber:timber:4.1.2'

    compile 'com.roughike:bottom-bar:1.3.3'
    compile 'de.hdodenhof:circleimageview:2.0.0'
}
